name: Build and Test

on:
  push:
    branches:
      - "**"
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build_3_12_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Load cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Load cached tox environments
        uses: actions/cache@v3
        with:
          path: .tox
          key: ${{ runner.os }}-tox-${{ hashFiles('tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-tox-
      - name: Run Python tests
        run: tox
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust_code/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('rust_code/**/Cargo.lock') }}
      - name: Run Rust tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path rust_code/Cargo.toml --all

  build_python:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          [
            "ubuntu-latest",
            "ubuntu-20.04",
            "windows-latest",
            "windows-2019",
            "macos-latest",
            "macos-13",
          ]
        python-version: ["3.9", "3.12"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Load cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Load cached tox environments
        uses: actions/cache@v3
        with:
          path: .tox
          key: ${{ runner.os }}-tox-${{ hashFiles('tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-tox-
      - name: Run Python tests
        run: tox

  build_rust:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          [
            "ubuntu-latest",
            "ubuntu-20.04",
            "windows-latest",
            "windows-2019",
            "macos-latest",
            "macos-13",
          ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust_code/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('rust_code/**/Cargo.lock') }}
      - name: Run Rust tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path rust_code/Cargo.toml --all
